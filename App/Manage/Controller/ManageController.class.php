<?php
/**
 * Created by PhpStorm.
 * User: vaio
 * Date: 2016/8/1
 * Time: 10:59
 */

namespace Manage\Controller;


use Think\Auth;

class ManageController extends AdminController{

    public function _initialize($group_title)
    {
        parent::_initialize($group_title); // TODO: Change the autogenerated stub
        $this->group_title = '管理员管理';
    }

    public function manage_list(){
        $now_page = I('get.page', 1);
        $page_size = 15;
        $count = M('manage_member')->page($now_page,$page_size)->count();
        $list = M('manage_member')->page($now_page,$page_size)->select();
        $Auth = new Auth();
        foreach ($list as &$val){
            $group = $Auth->getGroups($val['uid']);
            $group_name = array_column($group,'title');
            $val['group_name'] =    $group_name;
        }
        $pages = intval(ceil($count / $page_size));
        $list = array(
            'list'  =>  $list,
            'pages' =>  $pages,
            'get'   =>  $_GET,
        );
        $this->list = $list;
        $this->meta_title = '管理员列表';
        $this->display();
    }

    /*
     * 添加管理员
     */
    public function add_manage(){
        if(IS_POST){
            $nickname = I('post.nickname');
            $password = I('post.password');
            $repassword = I('post.repassword');
            /* 检测密码 */
            if($password != $repassword)
                $this->error('密码和重复密码不一致！','',true);
            
            $Manage_member = D('ManageMember');
            $uid = $Manage_member->register($nickname,$password);
            if(0 < $uid){ //注册成功
                $this->success('用户添加成功！','',true);
            } else { //注册失败，显示错误信息
                $this->error($this->showRegError($uid),'',true);
            }
        }
        //获取用户分组
        $this->meta_title = '添加管理员';
        $this->display();
    }

    public function changeStatus($method=null){
        $id = array_unique((array)I('id',0));
        if( in_array(C('USER_ADMINISTRATOR'), $id)){
            $this->error("不允许对超级管理员执行该操作!");
        }
        $id = is_array($id) ? implode(',',$id) : $id;
        if ( empty($id) ) {
            $this->error('请选择要操作的数据!');
        }
        $map['uid'] =   array('in',$id);
        switch ( strtolower($method) ){
            case 'close':
                $this->forbid('ManageMember', $map );
                break;
            case 'open':
                $this->resume('ManageMember', $map );
                break;
            case 'del':
                $this->delete('ManageMember', $map );
                break;
            case 'delete':
                $this->del('ManageMember',$map);
                break;
            default:
                $this->error('参数非法');
        }
    }

    /*
     * 根据错误代码返回错误信息
     */
    private function showRegError($uid){
        switch ($uid){
            case -1:    $error = '请填写正确的2-10位用户名！';
                break;
            case -2:    $error = '用户名被占用！';
                break;
            case -3:    $error = '请填写正确的6-20位密码！';
                break;
        }
        return $error;
    }
}